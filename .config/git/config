[apply]
    whitespace = fix

[alias]
    amend = commit --amend
    autorebase = -c 'core.editor=true' rebase -i --autosquash --autostash
    bull = submodule update --remote --init
    cdif = diff --cached --color-words
    cdiff = diff --cached
    cleaan = clean -dX
    cleaaan = clean -dx
    default-branch = name-rev --name-only origin/HEAD
    dif = diff --color-words
    empty-commit = commit --allow-empty
	exec = "!${SHELL:-/bin/sh} -ic "
    ff = merge --no-edit --ff-only origin/HEAD
    fixup = !cd "${GIT_PREFIX:-$PWD}" && git commit --fixup $(git last-commit)
    forget = reset HEAD^
    iec = commit --allow-empty --only --message \"Initial empty commit.\"
    merg = merge --no-edit
    pop = stash pop
    posh = push --set-upstream origin HEAD
    pre-commit = ! pre-commit run --files $(git uncommitted)
    Pull = pull --progress --ff --tags
    pull-force = !git fetch && git reset --hard "$(git tracking)"
    pushes = !git remote | xargs -n1 git push
    retry = !cd "${GIT_PREFIX:-$PWD}" && git amend --no-edit . && git shove
    root = rev-parse --show-toplevel
    serve-git = daemon --reuseaddr --verbose --base-path=. --export-all ./.git
    serve-http = !git update-server-info && cd .git && python -m http.server 8080
    shove = push --force-with-lease
    squash = !cd "${GIT_PREFIX:-$PWD}" && git commit --squash $(git last-commit)
    staash = stash push --include-untracked
    staaash = stash push --all --include-untracked
    stat = status --short --branch
    tag-version = !git tag --annotate --force --message "v$(cat VERSION)" "v$(cat VERSION)"
    temptree = !git worktree prune && git worktree add "$(mktemp -d)"
    touch = "!f() { touch \"$@\" && git add -f \"$@\"; }; f"
    tracking = rev-parse --abbrev-ref --symbolic-full-name @{upstream}
    trigger = !git commit --allow-empty --no-edit --amend && git push --force-with-lease

[color]
    grep = true
    ui = auto

[core]
    whitespace = space-before-tab,-indent-with-non-tab,trailing-space

[diff]
    renames = copies
    tool = meld

[difftool]
    prompt = false

[fetch]
    fsckobjects = true
    prune = true

[filter "ansible-vault"]
    clean = ANSIBLE_VERBOSITY=0 ansible-vault encrypt
    smudge = ANSIBLE_VERBOSITY=0 ansible-vault decrypt

[grep]
    linenumber = true

[init]
    defaultBranch = master

[merge]
    tool = meld
    ff = false

[push]
    followTags = true
    default = simple

[rebase]
    autoSquash = true

[receive]
    fsckObjects = true

[tag]
    forceSignAnnotated = true

[transfer]
    fsckobjects = true

[url "git@github.com:"]
	pushInsteadOf = "https://github.com/"

[user]
	name = Adar Nimrod
	email = nimrod@shore.co.il
	signingKey = A322378C61339ECD
